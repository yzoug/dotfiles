# zoug's Sway config
# $(man 5 sway)

## Variables
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# rofi config from sameemul-haque dotfiles
set $menu ~/.config/rofi/launchers/launcher.sh | xargs swaymsg exec --

## Output configuration
# default wallpapers in /usr/share/backgrounds/sway/
output * bg ~/.wallpaper.jpg fill

## Idle configuration
exec swayidle -w \
        timeout 300 'lockscreen.sh' \
        timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
        before-sleep 'lockscreen.sh'

## Input configuration
# You can get the names of your inputs by running: swaymsg -t get_inputs
# `man 5 sway-input`
# Touchpad settings
input "type:touchpad" {
    dwt enabled
    tap enabled
    middle_emulation enabled
}
# Azerty layout and custom settings
input "type:keyboard" {
    xkb_layout fr
    xkb_numlock enabled
    repeat_delay 200
    repeat_rate 50
}

## Key bindings
##
## Basics:

# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+w kill

# Start your launcher
bindsym $mod+Space exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway, suspend, reboot, or poweroff
bindsym $mod+Escape exec swaynag -t warning -m 'You pressed the exit shortcut. Do you want to...' \
    -B 'Poweroff?' 'systemctl poweroff' \
    -B 'Reboot?' 'systemctl reboot' \
    -B 'Suspend?' 'systemctl suspend'

#
# Moving around:
#
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

#
# Workspaces:
#
# Using hex codes because of my azerty keyboard
# Switch to workspace
bindsym $mod+0x26 workspace number 1
bindsym $mod+0xe9 workspace number 2
bindsym $mod+0x22 workspace number 3
bindsym $mod+0x27 workspace number 4
bindsym $mod+0x28 workspace number 5
bindsym $mod+0x2d workspace number 6
bindsym $mod+0xe8 workspace number 7
bindsym $mod+0x5f workspace number 8
bindsym $mod+0xe7 workspace number 9
bindsym $mod+0xe0 workspace number 10
# Move focused container to workspace
bindsym $mod+Shift+0x26 move container to workspace number 1
bindsym $mod+Shift+0xe9 move container to workspace number 2
bindsym $mod+Shift+0x22 move container to workspace number 3
bindsym $mod+Shift+0x27 move container to workspace number 4
bindsym $mod+Shift+0x28 move container to workspace number 5
bindsym $mod+Shift+0x2d move container to workspace number 6
bindsym $mod+Shift+0xe8 move container to workspace number 7
bindsym $mod+Shift+0x5f move container to workspace number 8
bindsym $mod+Shift+0xe7 move container to workspace number 9
bindsym $mod+Shift+0xe0 move container to workspace number 10

# Back and forth with Tab
bindsym $mod+Tab workspace back_and_forth

#
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+Alt+b or $mod+Alt+v, for horizontal and vertical splits
# respectively.
bindsym $mod+Alt+b splith
bindsym $mod+Alt+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+Alt+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+p move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+p scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Personal key bindings
# find keynames with wev
#
# Lockscreen
bindsym $mod+x exec lockscreen.sh

# btop
bindsym $mod+g exec $term -e btop

# BitWarden
bindsym $mod+Shift+b exec "swaymsg workspace number 7 && notify-send -i /usr/share/icons/hicolor/128x128/apps/bitwarden.png 'Password keymap pressed' 'Launching Bitwarden...' && bitwarden-desktop"

# Screenshots
bindsym Print exec SCREENSHOT_MODE=normal screenshot.sh
bindsym $mod+Print exec SCREENSHOT_MODE=full screenshot.sh

# Volume up, down and mute
bindsym XF86AudioLowerVolume exec pamixer -d 5
bindsym XF86AudioRaiseVolume exec pamixer -i 5
bindsym XF86AudioMute exec pamixer -t

# Monitor brightness
bindsym XF86MonBrightnessDown exec brightnessctl -c backlight s 10%-
bindsym XF86MonBrightnessUp exec brightnessctl -c backlight s +10%
# Keyboard brightness
bindsym XF86KbdBrightnessDown exec brightnessctl -d asus::kbd_backlight s 1-
bindsym XF86KbdBrightnessUp exec brightnessctl -d asus::kbd_backlight s +1

# Turn screen laptop on or off
bindsym $mod+m output "eDP-1" disable
bindsym $mod+Shift+m output "eDP-1" enable

# Calculator
bindsym XF86Calculator exec qalculate-gtk

# Clipboard rofi menu
# I no longer want this, but could in the future
#bindsym $mod+v exec ~/.config/rofi/clipboard/clipboard.sh

# Play a small audio file (useful to verify volume, output...)
bindsym $mod+b exec cvlc --play-and-exit /usr/share/sounds/freedesktop/stereo/message-new-instant.oga

# Borders Tokyo night theme found here:
# https://github.com/stronk-dev/Tokyo-Night-Linux/blob/master/.config/sway/config
# hides the border status
default_border pixel 3
default_floating_border pixel 3
hide_edge_borders smart
client.focused #9aa5ce #16161d #c0caf5 #9aa5ce #9aa5ce
client.focused_inactive  #16161d #16161d #c0caf5 #16161d #16161d
client.unfocused #16161d #16161d #c0caf5 #16161d #16161d

## Gaps
gaps inner 5
gaps outer 1
gaps top 1
gaps bottom 1
# Hide gaps when there is only 1 window
smart_gaps on

## We use waybar as the status bar
bar {
     swaybar_command waybar
}

# See what windows are using XWayland
for_window [shell="xwayland"] title_format "[XWayland] %title"

# Assign apps to specific workspaces
# get app_id or class using: swaymsg -t get_tree
assign [class="Vivaldi-stable"] workspace number 3
assign [app_id="LibreWolf"] workspace number 3
assign [app_id="thunderbird"] workspace number 4
assign [class="obsidian"] workspace number 5
assign [class="Bitwarden"] workspace number 7
assign [class="Spotify"] workspace number 9

## Startup execs
#
# Autotiling (https://github.com/nwg-piotr/autotiling)
exec_always autotiling
# Save clipboard history with cliphist
# I no longer want this, but could in the future
#exec_always wl-paste --watch cliphist store

# use dex to autostart applets (Desktop Entry XDG spec)
# autostart files are in /etc/xdg/autostart
exec dex /etc/xdg/autostart/blueman.desktop

include /etc/sway/config.d/*
